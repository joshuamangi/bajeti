{
  "version": 3,
  "sources": ["../../js/forgot_password.js"],
  "sourcesContent": ["const resetForm = document.getElementById(\"resetForm\");\nconst newPassword = document.getElementById(\"new_password\");\nconst confirmPassword = document.getElementById(\"confirm_password\");\nconst message = document.getElementById(\"message\");\nconst toggleNewPassword = document.getElementById(\"toggleNewPassword\");\nconst toggleConfirm = document.getElementById(\"toggleConfirm\");\nconst resetBtn = document.getElementById(\"resetBtn\");\nconst btnText = resetBtn.querySelector(\".p-btn-text\");\nconst btnSpinner = resetBtn.querySelector(\".p-btn-spinner\");\n\nfunction validatePassword() {\n    if (confirmPassword.value === \"\") {\n        message.textContent = \"\";\n        return;\n    }\n\n    if (newPassword.value === confirmPassword.value) {\n        message.style.color = \"green\";\n        message.textContent = \"\u2705 Passwords match\";\n    } else {\n        message.style.color = \"red\";\n        message.textContent = \"\u274C Passwords do not match\";\n    }\n}\n\nnewPassword.addEventListener(\"input\", validatePassword);\nconfirmPassword.addEventListener(\"input\", validatePassword);\n\ntoggleNewPassword.addEventListener(\"click\", () => {\n    const type = newPassword.type === \"password\" ? \"text\" : \"password\";\n    newPassword.type = type;\n    toggleNewPassword.classList.toggle(\"fa-eye-slash\");\n});\n\ntoggleConfirm.addEventListener(\"click\", () => {\n    const type = confirmPassword.type === \"password\" ? \"text\" : \"password\";\n    confirmPassword.type = type;\n    toggleConfirm.classList.toggle(\"fa-eye-slash\");\n});\n\nresetForm.addEventListener(\"submit\", (e) => {\n    if (newPassword.value !== confirmPassword.value) {\n        e.preventDefault();\n        message.style.color = \"red\";\n        message.textContent = \"\u274C Passwords do not match\";\n        return;\n    }\n\n    btnText.style.display = \"none\";\n    btnSpinner.style.display = \"inline-block\";\n    resetBtn.disabled = true;\n});"],
  "mappings": ";;AAAA,MAAM,YAAY,SAAS,eAAe,WAAW;AACrD,MAAM,cAAc,SAAS,eAAe,cAAc;AAC1D,MAAM,kBAAkB,SAAS,eAAe,kBAAkB;AAClE,MAAM,UAAU,SAAS,eAAe,SAAS;AACjD,MAAM,oBAAoB,SAAS,eAAe,mBAAmB;AACrE,MAAM,gBAAgB,SAAS,eAAe,eAAe;AAC7D,MAAM,WAAW,SAAS,eAAe,UAAU;AACnD,MAAM,UAAU,SAAS,cAAc,aAAa;AACpD,MAAM,aAAa,SAAS,cAAc,gBAAgB;AAE1D,WAAS,mBAAmB;AACxB,QAAI,gBAAgB,UAAU,IAAI;AAC9B,cAAQ,cAAc;AACtB;AAAA,IACJ;AAEA,QAAI,YAAY,UAAU,gBAAgB,OAAO;AAC7C,cAAQ,MAAM,QAAQ;AACtB,cAAQ,cAAc;AAAA,IAC1B,OAAO;AACH,cAAQ,MAAM,QAAQ;AACtB,cAAQ,cAAc;AAAA,IAC1B;AAAA,EACJ;AAEA,cAAY,iBAAiB,SAAS,gBAAgB;AACtD,kBAAgB,iBAAiB,SAAS,gBAAgB;AAE1D,oBAAkB,iBAAiB,SAAS,MAAM;AAC9C,UAAM,OAAO,YAAY,SAAS,aAAa,SAAS;AACxD,gBAAY,OAAO;AACnB,sBAAkB,UAAU,OAAO,cAAc;AAAA,EACrD,CAAC;AAED,gBAAc,iBAAiB,SAAS,MAAM;AAC1C,UAAM,OAAO,gBAAgB,SAAS,aAAa,SAAS;AAC5D,oBAAgB,OAAO;AACvB,kBAAc,UAAU,OAAO,cAAc;AAAA,EACjD,CAAC;AAED,YAAU,iBAAiB,UAAU,CAAC,MAAM;AACxC,QAAI,YAAY,UAAU,gBAAgB,OAAO;AAC7C,QAAE,eAAe;AACjB,cAAQ,MAAM,QAAQ;AACtB,cAAQ,cAAc;AACtB;AAAA,IACJ;AAEA,YAAQ,MAAM,UAAU;AACxB,eAAW,MAAM,UAAU;AAC3B,aAAS,WAAW;AAAA,EACxB,CAAC;",
  "names": []
}
